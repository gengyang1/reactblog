{"version":3,"sources":["config/apiUrl.js","pages/login/login.jsx","pages/addArticle/addArticle.jsx","pages/articleList/articleList.jsx","pages/index/index.jsx","store/reducer.js","store/index.js","pages/main.jsx","index.js"],"names":["ipUrl","servicePath","checkLogin","getTypeInfo","addArtical","delArtical","updateArtical","getArticalList","getArticleById","Login","props","useState","userName","setUserName","password","setPassword","isLoading","setIsLoading","className","tip","spinning","title","bordered","style","width","id","size","placeholder","prefix","type","color","onChange","e","target","value","Password","block","onClick","message","error","dataProps","axios","method","url","data","withCredentials","then","res","localStorage","setItem","openId","history","push","setTimeout","Option","Select","TextArea","Input","AddArticle","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","moment","showDate","setShowDate","typeInfo","setTypeInfo","selectedType","setSelectType","useEffect","tmpId","match","params","console","log","t","format","marked","setOptions","renderer","Renderer","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","changeContent","html","changeIntroduce","removeItem","header","artical_content","introduce","tmpInt","addTime","typeId","gutter","span","length","defaultValue","val","getPopupContainer","document","getElementById","map","item","index","kid","key","type_name","rows","onPressEnter","dangerouslySetInnerHTML","__html","type_id","dateText","add_time","Date","getTime","view_count","insertId","isSuccess","success","date","dateString","getCalendarContainer","Modal","confirm","ArticleList","listd","setListd","getList","dataSource","renderItem","Item","time","toJSON","substr","replace","Content","Layout","Header","Footer","Sider","SubMenu","Menu","connect","state","ownProps","num","collapsed","setCollapsed","minHeight","collapsible","onCollapse","overflow","height","position","left","theme","defaultOpenKeys","defaultSelectedKeys","mode","marginLeft","margin","padding","background","path","exact","component","textAlign","initialState","addReducer","action","store","createStore","rootReducer","Main","Index","to","ReactDOM","render"],"mappings":"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","file":"static/js/main.9761fce1.chunk.js","sourcesContent":["\n\nlet ipUrl = '/admin/'\n\nlet servicePath = {\n    checkLogin: ipUrl + 'checkLogin', //  检查用户名密码是否正确\n    getTypeInfo: ipUrl + 'getTypeInfo', //  获取文章类型\n    addArtical: ipUrl + 'addArtical', //  添加文章\n    delArtical: ipUrl + 'delArtical', //  删除文章\n    updateArtical: ipUrl + 'updateArtical' ,//  修改文章\n    getArticalList: ipUrl + 'getArticalList' ,//  文章列表\n    getArticleById:ipUrl + 'getArticleById/' ,  //  根据ID获得文章详情\n}\nexport default servicePath;","import React , {useState} from 'react';\nimport './login.css';\nimport axios from 'axios'\nimport { Card, Input, Icon, Button, Spin, message } from \"antd\";\nimport servicePath from \"../../config/apiUrl\";\n\nfunction Login(props){\n    const [userName , setUserName] = useState('')\n    const [password , setPassword] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    const checkLogin = () => {\n      setIsLoading(true);\n\n      if (!userName) {\n        message.error(\"用户名不能为空\");\n        return false;\n      } else if (!password) {\n        message.error(\"密码不能为空\");\n        return false;\n      }\n      let dataProps = {\n        userName: userName,\n        password: password\n      };\n      axios({\n        method: \"post\",\n        url: servicePath.checkLogin,\n        data: dataProps,\n        withCredentials: true\n      }).then(res => {\n        setIsLoading(false);\n        if (res.data.data == \"登录成功\") {\n          localStorage.setItem(\"openId\", res.data.openId);\n          props.history.push(\"/index\");\n        } else {\n          message.error(\"用户名密码错误\");\n        }\n      });\n\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 1000);\n    };\n\n\n    return (\n        <div className=\"login-div\">\n           \n            <Spin tip=\"Loading...\" spinning={isLoading}>\n                <Card title=\"react博客后台系统\" bordered={true} style={{ width: 400 }} >\n                    <Input\n                        id=\"userName\"\n                        size=\"large\"\n                        placeholder=\"用户名\"\n                        prefix={<Icon type=\"user\" style={{color:'rgba(0,0,0,.25)'}} />}\n                        onChange={(e)=>{setUserName(e.target.value)}}\n                    /> \n                    <br/><br/>\n                    <Input.Password\n                        id=\"password\"\n                        size=\"large\"\n                        placeholder=\"密码\"\n                        prefix={<Icon type=\"key\" style={{color:'rgba(0,0,0,.25)'}} />}\n                        onChange={(e)=>{setPassword(e.target.value)}}\n                    />     \n                    <br/><br/>\n                    <Button type=\"primary\" size=\"large\" block onClick={checkLogin} > 登录 </Button>\n                </Card>\n            </Spin>\n        </div>\n    )\n}\nexport default Login","import React, { useState, useEffect } from \"react\";\nimport marked from \"marked\";\nimport \"./addArticle.css\";\nimport { Row, Col, Input, Select, Button, DatePicker, message } from \"antd\";\nimport axios from \"axios\";\nimport servicePath from \"../../config/apiUrl\";\nimport moment from 'moment'\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nfunction AddArticle(props) {\n  const [articleId, setArticleId] = useState(0); // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\n  const [articleTitle, setArticleTitle] = useState(\"\"); //文章标题\n  const [articleContent, setArticleContent] = useState(\"\"); //markdown的编辑内容\n  const [markdownContent, setMarkdownContent] = useState(\"预览内容\"); //html内容\n  const [introducemd, setIntroducemd] = useState(); //简介的markdown内容\n  const [introducehtml, setIntroducehtml] = useState(\"等待编辑\"); //简介的html内容\n  const [showDate, setShowDate] = useState(moment()); //发布日期\n  const [updateDate, setUpdateDate] = useState(); //修改日志的日期\n  const [typeInfo, setTypeInfo] = useState([]); // 文章类别信息\n  const [selectedType, setSelectType] = useState(1); //选择的文章类别\n\n  useEffect(() => {\n    getTypeInfo();\n    let tmpId = props.match.params.id;\n    if (tmpId) {\n      console.log(tmpId);\n      setArticleId(tmpId);\n      getArticleById(tmpId);\n    }else{\n        let t = moment().format('YYYY-MM-DD HH:mm:ss')\n        setShowDate(t)\n\n    }\n  }, []);\n\n  marked.setOptions({\n    renderer: marked.Renderer(),\n    gfm: true,\n    pedantic: false,\n    sanitize: false,\n    tables: true,\n    breaks: false,\n    smartLists: true,\n    smartypants: false,\n  });\n\n  const changeContent = (e) => {\n    setArticleContent(e.target.value);\n    let html = marked(e.target.value);\n    setMarkdownContent(html);\n  };\n\n  const changeIntroduce = (e) => {\n    setIntroducemd(e.target.value);\n    let html = marked(e.target.value);\n    setIntroducehtml(html);\n  };\n\n  const getTypeInfo = () => {\n    axios({\n      method: \"get\",\n      url: servicePath.getTypeInfo,\n      withCredentials: true,\n    }).then((res) => {\n      if (res.data.data == \"没有登录\") {\n        localStorage.removeItem(\"openId\");\n        props.history.push(\"/\");\n      } else {\n        setTypeInfo(res.data.data);\n      }\n    });\n  };\n\n  const selectTypeHandler = (val) => {\n    setSelectType(val);\n  };\n\n  const saveArtical = () => {\n    if (!selectedType) {\n      message.error(\"必须选择文章类型\");\n      return false;\n    } else if (!articleTitle) {\n      message.error(\"文章名称不能为空\");\n      return false;\n    } else if (!articleContent) {\n      message.error(\"文章内容不能为空\");\n      return false;\n    } else if (!introducemd) {\n      message.error(\"文章简介不能为空\");\n      return false;\n    } else if (!showDate) {\n      message.error(\"发布日期不能为空\");\n      return false;\n    }\n    let dataProps = {};\n    dataProps.type_id = selectedType;\n    dataProps.title = articleTitle;\n    dataProps.artical_content = articleContent;\n    dataProps.introduce = introducemd;\n    console.log(showDate);\n    \n    let dateText = showDate;\n    dataProps.add_time = new Date(dateText).getTime() / 1000;\n    console.log(articleId);\n    if (articleId == 0) {\n      dataProps.view_count = 0;\n      axios({\n        method: \"POST\",\n        url: servicePath.addArtical,\n        data: dataProps,\n        withCredentials: true,\n      }).then((res) => {\n        setArticleId(res.data.insertId);\n        if (res.data.isSuccess) {\n          message.success(\"文章添加成功\");\n        } else {\n          message.error(\"文章添加失败\");\n        }\n      });\n    } else {\n      dataProps.id = articleId;\n\n      axios({\n        method: \"POST\",\n        url: servicePath.updateArtical,\n        data: dataProps,\n        withCredentials: true,\n      }).then((res) => {\n        if (res.data.isSuccess) {\n          console.log(props);\n          message.success(\"文章保存成功\");\n          props.history.push('/index')\n\n        } else {\n          message.error(\"文章保存失败\");\n        }\n      });\n    }\n  };\n\n  const getArticleById = (id) => {\n    axios(servicePath.getArticleById + id, {\n      withCredentials: true,\n      header: { \"Access-Control-Allow-Origin\": \"*\" },\n    }).then((res) => {\n      console.log(res);\n      \n      //let articleInfo= res.data.data[0]\n      setArticleTitle(res.data.data[0].title);\n      setArticleContent(res.data.data[0].artical_content);\n      let html = marked(res.data.data[0].artical_content);\n      setMarkdownContent(html);\n      setIntroducemd(res.data.data[0].introduce);\n      let tmpInt = marked(res.data.data[0].introduce);\n      setIntroducehtml(tmpInt);\n\n      setShowDate( moment(res.data.data[0].addTime) );\n      setSelectType(res.data.data[0].typeId);\n    });\n  };\n\n  return (\n    <div>\n      <Row gutter={20}>\n        <Col span={18}>\n          <Row gutter={10}>\n            <Col span={15}>\n              <Input\n                placeholder=\"博客标题\"\n                value={articleTitle}\n                size=\"default\"\n                onChange={(e) => {\n                  setArticleTitle(e.target.value);\n                }}\n              />\n            </Col>\n            <Col span={9} className=\"ds\">\n              {typeInfo.length > 0 ? (\n                <Select\n                  defaultValue={selectedType}\n                  size=\"default\"\n                  onChange={selectTypeHandler}\n                  getPopupContainer={() => document.getElementById(\"root\")}\n                >\n                  {typeInfo.map((item, index) => {\n                    return (\n                      <Option value={item.kid} key={index}>\n                        {item.type_name}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              ) : null}\n            </Col>\n          </Row>\n          <br />\n          <Row gutter={15}>\n            <Col span={12}>\n              <TextArea\n                value={articleContent}\n                className=\"markdown-content\"\n                rows={35}\n                placeholder=\"文章内容\"\n                onChange={changeContent}\n                onPressEnter={changeContent}\n              />\n            </Col>\n            <Col span={12}>\n              <div\n                className=\"show-html\"\n                dangerouslySetInnerHTML={{ __html: markdownContent }}\n              ></div>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col span={6}>\n          <Row>\n            <Col span={24}>\n              <Button size=\"default\">暂存文章</Button>&nbsp;\n              <Button type=\"primary\" size=\"default\" onClick={saveArtical}>\n                发布文章\n              </Button>\n              <TextArea\n                rows={4}\n                value={introducemd}\n                placeholder=\"文章简介\"\n                className=\"textAk\"\n                onChange={changeIntroduce}\n                onPressEnter={changeIntroduce}\n              />\n              <div\n                className=\"introduce-html\"\n                dangerouslySetInnerHTML={{ __html: introducehtml }}\n              ></div>\n            </Col>\n            <Col span={24}>\n              <div className=\"date-select\">\n                <DatePicker\n                  placeholder=\"发布日期\"\n                  size=\"default\"\n                  format= \"YYYY-MM-DD HH:mm:ss\"\n                  value = {moment(showDate,\"YYYY-MM-DD HH:mm:ss\") }\n                  onChange={(date, dateString) => {\n                    setShowDate(dateString);\n                  }}\n                  getCalendarContainer={() => document.getElementById(\"root\")}\n                />\n              </div>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n}\nexport default AddArticle;\n","import React, { useState, useEffect } from \"react\";\nimport marked from \"marked\";\nimport \"./articleList.css\";\nimport { List, Row, Col, Button, message, Modal } from \"antd\";\nimport axios from \"axios\";\nimport servicePath from \"../../config/apiUrl\";\nconst { confirm } = Modal;\n\nfunction ArticleList(props) {\n  let [listd, setListd] = useState([]);\n\n  useEffect(() => {\n    getList();\n  }, []);\n\n  function time(time = +new Date()) {\n    var date = new Date(time + 8 * 3600 * 1000);\n    return date.toJSON().substr(0, 19).replace(\"T\", \" \")\n  }\n\n  const getList = () => {\n    axios({\n      method: \"get\",\n      url: servicePath.getArticalList,\n      withCredentials: true,\n    }).then((res) => {\n      console.log(res.data.data);\n      setListd(res.data.data);\n    });\n  };\n\n  let delList = (id) => {\n    axios({\n      method: \"get\",\n      params: {\n        id: id,\n      },\n      url: servicePath.delArtical,\n      withCredentials: true,\n    }).then((res) => {\n      console.log(res);\n      message.success(\"删除成功\");\n      if (res.data.isSuccess) {\n        getList();\n      }\n    });\n  };\n\n  //修改文章\n    const updateArticle = (id) => {\n        props.history.push('/index/add/'+id)\n    }\n\n  return (\n    <div>\n      <List\n        header={\n          <Row className=\"list-div\">\n            <Col span={8}>\n              <b>标题</b>\n            </Col>\n            <Col span={4}>\n              <b>类别</b>\n            </Col>\n            <Col span={4}>\n              <b>发布时间</b>\n            </Col>\n            <Col span={4}>\n              <b>浏览量</b>\n            </Col>\n            <Col span={4}>\n              <b>操作</b>\n            </Col>\n          </Row>\n        }\n        bordered\n        dataSource={listd}\n        renderItem={(item) => {\n          return (\n            <List.Item>\n              <Row className=\"list-div\">\n                <Col span={8}>{item.title}</Col>\n                <Col span={4}>{item.type_name}</Col>\n                <Col span={4}>{time(item.add_time * 1000)}</Col>\n                <Col span={4}>{item.view_count}</Col>\n                <Col span={4}>\n                  <Button size='small' onClick={ () => updateArticle(item.id) } type=\"primary\" className=\"resetBtn\">\n                    修改\n                  </Button>\n                  <Button\n                    size='small'\n                    onClick={() => {\n                      delList(item.id);\n                    }}\n                  >\n                    删除\n                  </Button>\n                </Col>\n              </Row>\n            </List.Item>\n          );\n        }}\n      />\n    </div>\n  );\n}\n\nexport default ArticleList;\n","import { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport React, { useState } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport \"./index.css\"\nimport AddArticle from '../addArticle/addArticle'\nimport ArticleList from '../articleList/articleList';\nimport { connect } from 'react-redux'\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nlet Add = ()=>{\n    return (\n        <div>usdsd</div>\n    )\n}\n\nconst Index = (props)=>{\n    \n    let [collapsed, setCollapsed] = useState(false);\n\n    let onCollapse = collapsed => {\n        setCollapsed(collapsed)\n    };\n\n    let handleClickArticle = e =>{\n      \n        if(e.key=='addArticle'){\n           props.history.push('/index/add')\n        }else if(e.key=='articleList'){\n           props.history.push('/index')\n        }\n    }\n\n\n    return (\n      <>\n        <Layout style={{ minHeight: \"100vh\" }}>\n          <Sider \n             collapsible \n             collapsed={collapsed}\n             onCollapse={onCollapse}\n             style={{\n              overflow: 'auto',\n              height: '100vh',\n              position: 'fixed',\n              left: 0,\n            }}>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" defaultOpenKeys={['sub1']} defaultSelectedKeys={[\"articleList\"]} mode=\"inline\" onClick={handleClickArticle}>\n              \n              <SubMenu\n                key=\"sub1\"\n                title={\n                  <span>\n                    <Icon type=\"user\" />\n                    <span>文章管理</span>\n                  </span>\n                }\n              >\n              \n                <Menu.Item key=\"articleList\">文章列表</Menu.Item>\n                <Menu.Item key=\"addArticle\">添加文章</Menu.Item>\n              </SubMenu>\n\n              <Menu.Item key=\"9\">\n                <Icon type=\"file\" />\n                <span>留言管理</span>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout style={{ marginLeft: 200 }}>\n            <Content style={{ margin: \"0 16px\" }}>\n              <Breadcrumb style={{ margin: \"16px 0\" }}>\n                <Breadcrumb.Item>后台管理</Breadcrumb.Item>\n                <Breadcrumb.Item>工作台</Breadcrumb.Item>\n              </Breadcrumb>\n              <div style={{ padding: 24, background: \"#fff\", minHeight: 360 }}>\n                <Route path=\"/index\" exact component={ArticleList} />\n                <Route path=\"/index/add\" exact component={AddArticle} />\n                <Route path=\"/index/add/:id\" exact component={AddArticle} />\n  \n              </div>\n            </Content>\n              <Footer style={{ textAlign: \"center\" }}>gy博客{ props.num }</Footer>\n          </Layout>\n        </Layout>\n      </>\n    );\n      \n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n      num: state.num\n    }\n}\n\n\n\n\nexport default connect(mapStateToProps)(Index)","\nlet initialState = {\n    num: 1\n}\n\nlet addReducer = (state=initialState, action)=>{\n     switch (action.type) {\n         case \"ADD\":\n             state.num++;\n             return state;\n             break;\n     \n         default:\n             return state\n             break;\n     }\n}\n\nexport default addReducer","import {\n     createStore\n} from 'redux'\nimport rootReducer from './reducer.js'\n\nlet store = createStore(rootReducer)\n\n\n\nexport default store","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport Login from './login/login'\nimport Index from './index/index'\nimport store from '../store/index'\n\nfunction Main(){\n    return (\n        <Provider store={store}>\n          <Router>  \n             <Switch>\n                <Route path=\"/\" exact component={Login} />\n                <Route path=\"/index\" component={Index} />\n                <Redirect to=\"/\"/>\n             </Switch>  \n          </Router>\n        </Provider>\n       \n    )\n}\nexport default Main\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './pages/main'\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}